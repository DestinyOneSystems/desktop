<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="properties.css" type="text/css"?>
<!DOCTYPE dialog SYSTEM "chrome://desktop/locale/properties.dtd">
<dialog id="thumbnail-properties"
        title="&desktop.Properties;"
        onload="rtimushev.ffdesktop.ThumbnailPropertiesXul.initialize();"
        ondialogaccept="rtimushev.ffdesktop.ThumbnailPropertiesXul.onAccept();"
        ondialogcancel="rtimushev.ffdesktop.ThumbnailPropertiesXul.onCancel();"
        persist="width height"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <grid>
    <columns>
      <column/>
      <column flex="1"/>
    </columns>
    <rows>
      <row align="center">
        <label value="&desktopthumb.URL;:"/>
        <textbox id="url" type="autocomplete"
                 enablehistory="true" autocompletesearch="history"/>
        <button id="browseFile" label="&#x2026;"
                oncommand="rtimushev.ffdesktop.ThumbnailPropertiesXul.browseFile();"/>
      </row>
      <row align="center">
        <label value="&desktopthumb.CustomImage;:"/>
        <textbox id="customImage" type="autocomplete" enablehistory="true"
                 autocompletesearch="history"/>
        <button id="browseCustomImage" label="&#x2026;"
                oncommand="rtimushev.ffdesktop.ThumbnailPropertiesXul.browseCustomImage();"/>
      </row>
    </rows>
  </grid>

  <script src="../../namespace.js"/>
  <script src="../../utils.js"/>
  <script src="../../file.js"/>
  <script src="../../dom.js"/>
  <script>
    <![CDATA[
    rtimushev.ffdesktop.ThumbnailPropertiesXul = new function() {

      var File = rtimushev.ffdesktop.File
      var Dom  = rtimushev.ffdesktop.Dom
      var URL  = rtimushev.ffdesktop.URL

      this.initialize = function() {
        var properties = window.arguments[0].properties;
        Dom.get("url").value = properties.url || "";
        Dom.get("customImage").value = properties.customImage || "";

        if (properties.isFolder) {
          Dom.get("url").readOnly = true;
          Dom.get("url").removeAttribute("enablehistory");
          Dom.get("browseFile").disabled = true;
        }
      }

      this.onAccept = function() {
        var properties = window.arguments[0].properties;
        var url = Dom.get("url").value;
        if (url != properties.url) properties.title = "";
        properties.url = !url || URL.getScheme(url) ? url : "http://" + url;
        properties.customImage = Dom.get("customImage").value;
      }

      this.onCancel = function() {
        window.arguments[0].properties = null;
      }

      this.browseFile = function() {
        var file = File.chooseFile("open");
        if (file) Dom.get("url").value = File.getFileURL(file);
      }

      this.browseCustomImage = function() {
        var file = File.chooseFile("open", ["images"]);
        if (file) Dom.get("customImage").value = File.getFileURL(file);
      }

    }
    ]]>
  </script>
</dialog>
